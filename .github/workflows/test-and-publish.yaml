name: test-and-publish

on:
  # run on all pushes to any branch
  push:
  # run only on master pull requests
  pull_request:
    branches: [master]
  # also run periodically
  schedule:
    - cron: "41 7 * * 5"

jobs:
  pytest-coverage:
    name: Test and check coverage of 🐍 code
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Test with invoke -> nox -> pytest
        run: invoke ci-test --python ${{ matrix.python-version }}

  format-lint:
    runs-on: ubuntu-latest
    name: Format and lint 🐍 code
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Lint with invoke -> nox -> linters
        run: invoke format-and-lint

  docs:
    runs-on: ubuntu-latest
    name: Build documentation
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies including pandoc 🐼
        run: |
          sudo apt install pandoc
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Build docs with invoke -> nox session
        run: invoke docs

  changelog:
    runs-on: ubuntu-latest
    name: Create changelog for release
    steps:
      - uses: actions/checkout@v2
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,docs,chore,style,build,ci,test
      # - name: Create CHANGELOG.md
      #   run: echo ${{ steps.changelog.outputs.changelog }} > CHANGELOG.md
      # - name: Write to CHANGELOG.md
      #   uses: DamianReeves/write-file-action@master
      #   with:
      #     path: ./CHANGELOG.md
      #     contents: ${{ steps.changelog.outputs.changelog }}
      #     write-mode: overwrite
      # - name: Commit and push CHANGELOG.md
      #   uses: EndBug/add-and-commit@v7
      #   with:
      #     add: CHANGELOG.md
      #     message: "docs: Update CHANGELOG.md"
      #     branch: master
      # - name: Commit CHANGELOG.md
      #   run: |
      #     git config --global user.name 'nialov'
      #     git config --global user.email 'nikolasovaskainen@gmail.com'
      #     git add CHANGELOG.md
      #     git commit -m "docs(changelog): update changelog" || echo "no changes"
      #     git push || echo "nothing to push"

  # build-and-publish:
  #   runs-on: ubuntu-latest
  #   # Requires that unit tests pass but doesn't require lints
  #   needs: pytest-coverage
  #   name: Build and publish Python 🐍 distributions 📦 to PyPI
  #   # Pushes to PyPI on tagged commit pushes of master branch
  #   # Additionally tests building with setuptools on all branches
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.8
  #     - name: Install invoke and nox
  #       run: >-
  #         python -m pip install invoke nox
  #     - name: Build binary wheel and a source tarball
  #       run: >-
  #         invoke build
  #     - name: Publish distribution 📦 to PyPI on tagged commit pushes
  #       # Publish to PyPI on tagged commit pushes on master
  #       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_PASSWORD }}

  release:
    runs-on: ubuntu-latest
    # Requires tests and changelog make pass
    needs: [pytest-coverage, changelog]
    name: Release on GitHub
    steps:
      - uses: actions/checkout@v2
      # - name: Create RELEASE_CHANGELOG.md
      #   run: echo ${{ steps.changelog.outputs.changes }} > RELEASE_CHANGELOG.md
      - name: Publish release on GitHub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
